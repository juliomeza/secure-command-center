# Generated by Django 5.1.7 on 2025-05-15 18:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(max_length=255)),
                ('warehouse', models.CharField(max_length=255)),
                ('warehouse_city_state', models.CharField(max_length=255)),
                ('order_number', models.CharField(max_length=100)),
                ('shipment_number', models.CharField(max_length=100)),
                ('inbound_or_outbound', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('order_or_shipment_class_type', models.CharField(max_length=100)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'data_orders',
            },
        ),
        migrations.CreateModel(
            name='TestData',
            fields=[
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_class_id', models.IntegerField()),
                ('order_status_id', models.IntegerField()),
                ('lookup_code', models.CharField(max_length=255)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Test Data',
                'verbose_name_plural': 'Test Data',
                'db_table': 'data_testdata',
            },
        ),
        migrations.CreateModel(
            name='DataCardReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_id', models.IntegerField()),
                ('warehouse_order', models.FloatField(blank=True, null=True)),
                ('warehouse', models.CharField(max_length=255)),
                ('section', models.IntegerField()),
                ('list_order', models.IntegerField()),
                ('description', models.TextField()),
                ('day1_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day2_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day3_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day4_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day5_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day6_value', models.CharField(blank=True, max_length=255, null=True)),
                ('day7_value', models.CharField(blank=True, max_length=255, null=True)),
                ('total', models.CharField(blank=True, max_length=255, null=True)),
                ('is_integer', models.BooleanField(default=False)),
                ('is_percentage', models.BooleanField(default=False)),
                ('is_text', models.BooleanField(default=False)),
                ('is_title', models.BooleanField(default=False)),
                ('has_heat_colors', models.BooleanField(default=False)),
                ('year', models.IntegerField()),
                ('week', models.IntegerField()),
                ('fetched_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'DataCard Report',
                'verbose_name_plural': 'DataCard Reports',
                'db_table': 'data_datacardreport',
                'indexes': [models.Index(fields=['warehouse_id'], name='data_dataca_warehou_52f93f_idx'), models.Index(fields=['year', 'week'], name='data_dataca_year_3cbdff_idx')],
                'unique_together': {('warehouse_id', 'section', 'list_order', 'year', 'week')},
            },
        ),
    ]
